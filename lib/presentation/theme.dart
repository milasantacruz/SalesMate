import 'package:flex_color_scheme/flex_color_scheme.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

abstract final class AppTheme {

static ColorScheme lightColorScheme = ColorScheme(
  brightness: Brightness.light,
  primary: Color.fromARGB(255, 0, 208, 255),
  onPrimary: Color(0xFFFFFFFF),
  primaryContainer: Color.fromARGB(255, 255, 56, 152),
  onPrimaryContainer: Color(0xFF141012),
  primaryFixed: Color(0xFFF1DEE3),
  primaryFixedDim: Color(0xFFE0BAC4),
  onPrimaryFixed: Color(0xFF6C2033),
  onPrimaryFixedVariant: Color(0xFF7A243A),
  secondary: Color(0xFFFBAE9D),
  onSecondary: Color(0xFF000000),
  secondaryContainer: Color(0xFFFFDAD1),
  onSecondaryContainer: Color(0xFF141312),
  secondaryFixed: Color(0xFFF4DDD9),
  secondaryFixedDim: Color(0xFFECC8BF),
  onSecondaryFixed: Color(0xFF4E1103),
  onSecondaryFixedVariant: Color(0xFF841D05),
  tertiary: Color(0xFFF39682),
  onTertiary: Color(0xFF000000),
  tertiaryContainer: Color(0xFFFFCFC3),
  onTertiaryContainer: Color(0xFF141211),
  tertiaryFixed: Color(0xFFF0D2CB),
  tertiaryFixedDim: Color(0xFFE7B8AD),
  onTertiaryFixed: Color(0xFF310D05),
  onTertiaryFixedVariant: Color(0xFF611909),
  error: Color(0xFF790000),
  onError: Color(0xFFFFFFFF),
  errorContainer: Color(0xFFF1D9D9),
  onErrorContainer: Color(0xFF141313),
  surface: Color(0xFFFBF9FA),
  onSurface: Color(0xFF221E1F),
  surfaceDim: Color(0xFFE0DEDE),
  surfaceBright: Color(0xFFFCFAFB),
  surfaceContainerLowest: Color(0xFFFEFCFD),
  surfaceContainerLow: Color(0xFFF7F6F6),
  surfaceContainer: Color(0xFFF2F1F1),
  surfaceContainerHigh: Color(0xFFEDEBEB),
  surfaceContainerHighest: Color(0xFFE7E5E5),
  onSurfaceVariant: Color(0xFF474344),
  outline: Color(0xFF968D8F),
  outlineVariant: Color(0xFFD1C8CA),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFF2B2A2B),
  onInverseSurface: Color(0xFFF1EFEF),
  inversePrimary: Color(0xFFFFF4F9),
  surfaceTint: Color(0xFFCE5B78),
);


static ColorScheme darkColorScheme = ColorScheme(
  brightness: Brightness.dark,
  primary: Color(0xFFEEC4D8),
  onPrimary: Color(0xFF080808),
  primaryContainer: Color(0xFFCE5B78),
  onPrimaryContainer: Color(0xFFFFF8FA),
  primaryFixed: Color(0xFFF1DEE3),
  primaryFixedDim: Color(0xFFE0BAC4),
  onPrimaryFixed: Color(0xFF6C2033),
  onPrimaryFixedVariant: Color(0xFF7A243A),
  secondary: Color(0xFFF5D6C6),
  onSecondary: Color(0xFF080808),
  secondaryContainer: Color(0xFFEBA689),
  onSecondaryContainer: Color(0xFF100C0A),
  secondaryFixed: Color(0xFFF4DDD9),
  secondaryFixedDim: Color(0xFFECC8BF),
  onSecondaryFixed: Color(0xFF4E1103),
  onSecondaryFixedVariant: Color(0xFF841D05),
  tertiary: Color(0xFFF7E0D4),
  onTertiary: Color(0xFF080808),
  tertiaryContainer: Color(0xFFEEBDA8),
  onTertiaryContainer: Color(0xFF100D0C),
  tertiaryFixed: Color(0xFFF0D2CB),
  tertiaryFixedDim: Color(0xFFE7B8AD),
  onTertiaryFixed: Color(0xFF310D05),
  onTertiaryFixedVariant: Color(0xFF611909),
  error: Color(0xFFCF6679),
  onError: Color(0xFF080505),
  errorContainer: Color(0xFFB1384E),
  onErrorContainer: Color(0xFFFEF6F7),
  surface: Color(0xFF161415),
  onSurface: Color(0xFFF0ECEE),
  surfaceDim: Color(0xFF151213),
  surfaceBright: Color(0xFF383637),
  surfaceContainerLowest: Color(0xFF100D0E),
  surfaceContainerLow: Color(0xFF1C191B),
  surfaceContainer: Color(0xFF232021),
  surfaceContainerHigh: Color(0xFF2A2729),
  surfaceContainerHighest: Color(0xFF343233),
  onSurfaceVariant: Color(0xFFCCC7C9),
  outline: Color(0xFF7E7C7D),
  outlineVariant: Color(0xFF4C494A),
  shadow: Color(0xFF000000),
  scrim: Color(0xFF000000),
  inverseSurface: Color(0xFFE8E7E7),
  onInverseSurface: Color(0xFF302E2F),
  inversePrimary: Color(0xFF725F68),
  surfaceTint: Color(0xFFEEC4D8),
);


static ThemeData light = FlexThemeData.light(
    // Using FlexColorScheme built-in FlexScheme enum based colors
    scheme: FlexScheme.custom,
    colorScheme: lightColorScheme,
    // Surface color adjustments.
    surfaceMode: FlexSurfaceMode.highBackgroundLowScaffold,
    blendLevel: 2,
    // Component theme configurations for light mode.
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      blendOnLevel: 10,
      useM2StyleDividerInM3: true,
      outlinedButtonOutlineSchemeColor: SchemeColor.primary,
      outlinedButtonPressedBorderWidth: 2.0,
      toggleButtonsBorderSchemeColor: SchemeColor.primary,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.primary,
      unselectedToggleIsColored: true,
      sliderValueTinted: true,
      sliderTrackHeight: 6,
      inputDecoratorSchemeColor: SchemeColor.primary,
      inputDecoratorIsFilled: true,
      inputDecoratorBackgroundAlpha: 21,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorRadius: 12.0,
      inputDecoratorUnfocusedHasBorder: false,
      inputDecoratorPrefixIconSchemeColor: SchemeColor.primary,
      popupMenuRadius: 6.0,
      popupMenuElevation: 8.0,
      alignedDropdown: true,
      drawerIndicatorSchemeColor: SchemeColor.primary,
      bottomNavigationBarMutedUnselectedLabel: false,
      bottomNavigationBarMutedUnselectedIcon: false,
      menuRadius: 6.0,
      menuElevation: 8.0,
      menuBarRadius: 0.0,
      menuBarElevation: 1.0,
      navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
      navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationBarIndicatorSchemeColor: SchemeColor.primary,
      navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
      navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationRailUseIndicator: true,
      navigationRailIndicatorSchemeColor: SchemeColor.primary,
      navigationRailIndicatorOpacity: 1.00,
    ),
    // Direct ThemeData properties.
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    cupertinoOverrideTheme: const CupertinoThemeData(applyThemeToAll: true),
  ).copyWith(
    floatingActionButtonTheme: const FloatingActionButtonThemeData(
      backgroundColor: Color.fromARGB(255, 0, 208, 255),
      extendedTextStyle: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
    ),
  );

  // The FlexColorScheme defined dark mode ThemeData.
static ThemeData dark = FlexThemeData.dark(
    // Using FlexColorScheme built-in FlexScheme enum based colors.
    scheme: FlexScheme.custom,
    colorScheme: darkColorScheme,
    // Surface color adjustments.
    surfaceMode: FlexSurfaceMode.highBackgroundLowScaffold,
    blendLevel: 8,
    // Component theme configurations for dark mode.
    subThemesData: const FlexSubThemesData(
      interactionEffects: true,
      tintedDisabledControls: true,
      blendOnLevel: 8,
      blendOnColors: true,
      useM2StyleDividerInM3: true,
      outlinedButtonOutlineSchemeColor: SchemeColor.primary,
      outlinedButtonPressedBorderWidth: 2.0,
      toggleButtonsBorderSchemeColor: SchemeColor.primary,
      segmentedButtonSchemeColor: SchemeColor.primary,
      segmentedButtonBorderSchemeColor: SchemeColor.primary,
      unselectedToggleIsColored: true,
      sliderValueTinted: true,
      sliderTrackHeight: 6,
      inputDecoratorSchemeColor: SchemeColor.primary,
      inputDecoratorIsFilled: true,
      inputDecoratorBackgroundAlpha: 43,
      inputDecoratorBorderType: FlexInputBorderType.outline,
      inputDecoratorRadius: 12.0,
      inputDecoratorUnfocusedHasBorder: false,
      popupMenuRadius: 6.0,
      popupMenuElevation: 8.0,
      alignedDropdown: true,
      drawerIndicatorSchemeColor: SchemeColor.primary,
      bottomNavigationBarMutedUnselectedLabel: false,
      bottomNavigationBarMutedUnselectedIcon: false,
      menuRadius: 6.0,
      menuElevation: 8.0,
      menuBarRadius: 0.0,
      menuBarElevation: 1.0,
      navigationBarSelectedLabelSchemeColor: SchemeColor.primary,
      navigationBarSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationBarIndicatorSchemeColor: SchemeColor.primary,
      navigationRailSelectedLabelSchemeColor: SchemeColor.primary,
      navigationRailSelectedIconSchemeColor: SchemeColor.onPrimary,
      navigationRailUseIndicator: true,
      navigationRailIndicatorSchemeColor: SchemeColor.primary,
      navigationRailIndicatorOpacity: 1.00,
    ),
    // Direct ThemeData properties.
    visualDensity: FlexColorScheme.comfortablePlatformDensity,
    cupertinoOverrideTheme: const CupertinoThemeData(applyThemeToAll: true),
  );


}
